function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _defineProperties(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}function _createClass(e,t,n){return t&&_defineProperties(e.prototype,t),n&&_defineProperties(e,n),e}var Calendar=function(){function c(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:{},t=e.container,n=void 0===t?"":t,a=e.activeDateClass,s=void 0===a?"":a,r=e.initialDate,i=void 0===r?new Date:r;_classCallCheck(this,c),this.$container=n?document.querySelector(n):null,this.activeDateClass=s,this.selectedDate=i,this.currentMonth=i,this.currentMonthDays=[],this.idGenerator=0,this.events={events:[{id:1,title:"Event",year:2019,month:2,day:22},{id:10,title:"Meetting",year:2019,month:2,day:24}]},this.monthsNames=["January","February","March","April","May","June","July","August","September","October","November","December"],this.daysNames=["Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday"],this.generateMarkup(),this.initHandlers()}return _createClass(c,[{key:"buildCurrentMonthDays",value:function(){var e=this.currentMonth.getFullYear(),t=this.currentMonth.getMonth(),n=new Date(e,t,1),a=new Date(e,t+1,0);this.currentMonthDays=[];for(var s=-n.getUTCDay();s<0;s++)this.currentMonthDays.push(new Date(e,t,s));for(var r=1,i=a.getDate();r<=i;r++)this.currentMonthDays.push(new Date(e,t,r));for(var c=1,o=7-a.getUTCDay();c<o;c++)this.currentMonthDays.push(new Date(e,t+1,c))}},{key:"getDayClass",value:function(e){var t=["calendar-item"];this.currentMonth.getFullYear(),this.currentMonth.getMonth();return e.toDateString()===this.selectedDate.toDateString()&&(t=t.concat(["is-active",this.activeDateClass])),11===e.getMonth()&&0===this.currentMonth.getMonth()?t.push("calendar-item-prev-month"):0===e.getMonth()&&11===this.currentMonth.getMonth()?t.push("calendar-item-next-month"):e.getMonth()<this.currentMonth.getMonth()?t.push("calendar-item-prev-month"):e.getMonth()>this.currentMonth.getMonth()&&t.push("calendar-item-next-month"),t.join(" ")}},{key:"getFormattedDate",value:function(e){return"".concat(e.getFullYear()," ").concat(this.monthsNames[e.getMonth()])}},{key:"generateDaysMarkup",value:function(){var a=[];return this.buildCurrentMonthDays(),this.currentMonthDays.forEach(function(e,t){var n=this.checkEvents(e).length;a.push('\n        <li data-date="'.concat(e.toLocaleDateString(),'" class="').concat(this.getDayClass(e)," ").concat(n?"has-event":"",'">').concat(e.getDate(),"</li>\n      "))}.bind(this)),a.join("")}},{key:"generateEventsMarkup",value:function(){var t=[],e=this.checkEvents(this.selectedDate),n=0===this.selectedDate.getDay()?n=6:this.selectedDate.getDay()-1;return e.forEach(function(e){t.push('\n        <li class="event-item" data-id="'.concat(e.id,'" data-date="').concat(this.selectedDate.toLocaleDateString(),'">\n          <span class="event-title">').concat(e.title,'</span>\n          <span class="remove-event"></span>\n        </li>\n      '))}.bind(this)),'\n      <div>\n        <div class="event-date">\n          <span class="event-day">\n            '.concat(this.selectedDate.getDate(),'\n          </span>\n          <span class="event-day-name">\n            ').concat(this.daysNames[n],"\n          </span>\n        </div>\n        <ul>\n          ").concat(t&&t.join(""),"\n        </ul>\n        ").concat(0==t?'<span class="event-warning">There are no appointments</span>':"","\n      </div>\n    ")}},{key:"renderApp",value:function(){this.$container.querySelector(".calendar-days-list").innerHTML=this.generateDaysMarkup(),this.$container.querySelector(".calendar-header-date").innerHTML=this.getFormattedDate(this.currentMonth)}},{key:"renderEvents",value:function(){var e=this.$container.querySelector(".events-container"),t=this.$container.querySelector(".is-active").classList;e.innerHTML=this.generateEventsMarkup(),this.checkEvents(this.selectedDate).length?!t.contains("has-event")&&t.add("has-event"):t.contains("has-event")&&t.remove("has-event")}},{key:"prevMonth",value:function(){var e=this.currentMonth.getFullYear(),t=this.currentMonth.getMonth();this.currentMonth=new Date(e,t-1,1),this.renderApp()}},{key:"nextMonth",value:function(){var e=this.currentMonth.getFullYear(),t=this.currentMonth.getMonth();this.currentMonth=new Date(e,t+1,1),this.renderApp()}},{key:"selectDay",value:function(e){var t=e.target;if(t.matches(".calendar-item")){var n=t.matches(".calendar-item-prev-month"),a=t.matches(".calendar-item-next-month");if(this.selectedDate=new Date(t.dataset.date),n||a)n?this.prevMonth():this.nextMonth(),t=this.$container.querySelector('[data-date="'.concat(this.selectedDate.toLocaleDateString(),'"]'));else{var s=this.$container.querySelector(".is-active");s&&(s.classList.remove("is-active"),this.activeDateClass&&s.classList.remove(this.activeDateClass))}t.classList.add("is-active"),this.activeDateClass&&t.classList.add(this.activeDateClass),this.renderEvents()}}},{key:"generateMarkup",value:function(){this.$container.classList.add("calendar"),this.$container.innerHTML='\n      <div class="calendar-wrapper">\n        <div class="calendar-header">\n          <button class="calendar-btn calendar-btn-prev">‹</button>\n          <div class="calendar-header-date">\n            '.concat(this.getFormattedDate(this.currentMonth),'\n          </div>\n          <button class="calendar-btn calendar-btn-next">›</button>\n        </div>\n        <div class="calendar-body">\n          <ul class="calendar-days-names">\n            ').concat(this.daysNames.map(function(e,t){return'<li class="calendar-day">'.concat(e.slice(0,3),"</li>")}).join(""),'\n          </ul>\n          <ul class="calendar-days-list">\n            ').concat(this.generateDaysMarkup(),'\n          </ul>\n        </div>\n      </div>\n      <div class="calendar-events">\n        <div class="calendar-events-inner">\n          <div class="calendar-events-list">\n            <div class="events-container">\n              ').concat(this.generateEventsMarkup(),'\n            </div>\n            <div class="calendar-add-event-wrapper">\n              <input class="calendar-input" type="text" placeholder="New Appointment" required/>\n              <button class="calendar-add-event"></button>\n            </div>\n          </div>\n        </div>\n      </div>\n    ')}},{key:"checkEvents",value:function(e){for(var t=[],n="".concat(e.getFullYear()," / ").concat(e.getMonth()+1," / ").concat(e.getDate()),a=0;a<this.events.events.length;a++){var s=this.events.events[a],r="".concat(s.year," / ").concat(s.month," / ").concat(s.day);Date.parse(r)===Date.parse(n)&&t.push(s)}return t}},{key:"addEvent",value:function(){var e=this.$container.querySelector(".calendar-input");if(e.value.length){this.checkEvents(this.selectedDate);this.events.events.push({id:this.idGenerator,title:e.value,year:this.selectedDate.getFullYear(),month:this.selectedDate.getMonth()+1,day:this.selectedDate.getDate()}),e.value="",this.renderEvents()}}},{key:"removeEvent",value:function(){if(event.target.matches(".remove-event")){var t=event.target.parentNode.dataset.id,e=this.events.events.findIndex(function(e){return e.id==t});this.events.events.splice(e,1),this.renderEvents()}}},{key:"initHandlers",value:function(){this.$container.querySelector(".calendar-btn-prev").addEventListener("click",this.prevMonth.bind(this)),this.$container.querySelector(".calendar-btn-next").addEventListener("click",this.nextMonth.bind(this)),this.$container.querySelector(".calendar-days-list").addEventListener("click",this.selectDay.bind(this)),this.$container.querySelector(".calendar-add-event").addEventListener("click",this.addEvent.bind(this)),this.$container.querySelector(".events-container").addEventListener("click",this.removeEvent.bind(this))}}]),c}();document.addEventListener("DOMContentLoaded",function(){new Calendar({container:".calendar"})});